#!/bin/bash -ex

# This file is part of the open-lmake distribution (git@github.com:cesar-douady/open-lmake.git)
# Copyright (c) 2023 Doliam
# This program is free software: you can redistribute/modify under the terms of the GPL-v3 (https://www.gnu.org/licenses/gpl-3.0.html).
# This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

TOP=pycxx-7.1.7

ed $TOP/CXX/Python2/Objects.hxx <<"EOF"
2925s:MapBase<T>:MapBase:
2919s:MapBase<T>:MapBase:
2902s:MapBase<T>:MapBase:
2746s:mapref<T>:mapref:
2740s:mapref<T>:mapref:
2733s:mapref<T>:mapref:
1466s:SeqBase<T>:SeqBase:
1460s:SeqBase<T>:SeqBase:
1454s:SeqBase<T>:SeqBase:
w
EOF

ed $TOP/CXX/Python3/Objects.hxx <<"EOF"
2760s:MapBase<T>:MapBase:
2753s:MapBase<T>:MapBase:
2736s:MapBase<T>:MapBase:
2576s:mapref<T>:mapref:
2570s:mapref<T>:mapref:
2563s:mapref<T>:mapref:
1579,1581c
        class const_iterator {
        public:
            using iterator_categorie = std::random_access_iterator_tag ;
            using value_type         = const Object                    ;
            using difference_type    = ptrdiff_t                       ;
            using pointer            = value_type*                     ;
            using reference          = value_type&                     ;
.
1427,1428c
        class iterator {
        public:
            using iterator_categorie = std::random_access_iterator_tag ;
            using value_type         = seqref<T>                       ;
            using difference_type    = ptrdiff_t                       ;
            using pointer            = value_type*                     ;
            using reference          = value_type&                     ;
.
1326s:SeqBase<T>:SeqBase:
1320s:SeqBase<T>:SeqBase:
1314s:SeqBase<T>:SeqBase:
w
EOF

ed $TOP/Demo/Python3/test_assert.hxx <<"EOF"
47,$s:static void:static inline void:
w
EOF

ed $TOP/CXX/Python2/Exception.hxx <<"EOF"
115s:<\(.*\)>:"\1":
w
EOF

ed $TOP/CXX/Python3/Exception.hxx <<"EOF"
118s:<\(.*\)>:"\1":
w
EOF

ed $TOP/Src/Python2/cxx_exceptions.cxx <<"EOF"
4s:<\(.*\)>:"\1":
5s:<\(.*\)>:"\1":
64s:<\(.*\)>:"\1":
w
EOF

ed $TOP/Src/Python3/cxx_exceptions.cxx <<"EOF"
4s:<\(.*\)>:"\1":
5s:<\(.*\)>:"\1":
64s:<\(.*\)>:"\1":
w
EOF
